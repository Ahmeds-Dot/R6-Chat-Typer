{
  "ctrl+1": "GG!",
  "ctrl+2": "No matter how tough the journey gets, remember that perseverance fuels success; never quit, and you'll reach your dreams!",
  "ctrl+3": "Wow, your gameplay is a masterclass in how to throw a match. It's like you're trying to lose on purpose. BITCH",
  "ctrl+4": "ΔσπλθФθξψΩ≈ç√∫˜µ≤≥⊕⊗∞",
  "ctrl+5": "Once upon a time in the swamp, Shrek lived a peaceful life, enjoying solitude. One day, his home was invaded by fairy tale creatures, banished by the villainous Lord Farquaad. Annoyed, Shrek set off to confront Farquaad and reclaim his swamp. Along the way, he met a talkative donkey named Donkey, who insisted on joining him.At Farquaad's castle, Shrek agreed to rescue Princess Fiona in exchange for the return of his home. The duo faced obstacles, including a fierce dragon guarding Fiona. Shrek bravely fought the dragon, and Donkey, ever charming, won her over.Fiona, however, had a secret: she transformed into an ogre at night due to a curse. As they traveled back, Shrek began to fall in love with her. When Fiona revealed her true self, Shrek embraced her, realizing that beauty lies within.In a climactic battle against Farquaad, Shrek and his friends fought bravely. Love prevailed, and Fiona chose to be with Shrek, embracing her ogre form. They returned to the swamp, living happily ever after, proving that true love transcends appearances.",
  "ctrl+6": "Yes S1ir!",
  "ctrl+7": "import jsonimport osimport timeimport keyboardfrom typing import Listdef get_keys() -> dict:    try:        with open('keys.json', 'r') as keys_file:            data = json.load(keys_file)    except FileNotFoundError:        with open('keys.json', 'w') as keys_file:            keys_file.write('{}')        data = {}    return datadef load_keys(keys_: dict) -> None:    os.system('cls')    print('Keys Loaded:')    for key in keys_.keys():        value: str = keys_.get(key)        keyboard.add_hotkey(key, key_write, args=(key, value))        print(' \n', key, '->', value)def refresh_keys(hotkey):    keyboard.remove_all_hotkeys()    keyboard.add_hotkey(hotkey, refresh_keys, args=(hotkey))    load_keys(get_keys())with open('settings.json', 'r') as settings_file:    settings: dict = json.load(settings_file)    KEY_IN_DELAY: float = settings.get('Keyboard Input Delay')    CHAR_LIMIT: int = settings.get('Character Limit Break')    TEXT_CHAT_BUTTON: str = settings.get('Text Chat Button')    REFRESH_KEY: str = settings.get('Refresh Keys')    keyboard.add_hotkey(REFRESH_KEY, refresh_keys, args=(REFRESH_KEY,))def split_chars(string: str, limit: int = CHAR_LIMIT) -> List[str]:    if len(string) <= limit:        return [string]    idx = 0    last = limit    lst = []    while len(string[idx:]) >= limit:        lst.append(string[idx:last])        idx += limit        last += limit    lst.append(string[idx:last])    return lstdef better_press(key: str) -> None:    time.sleep(KEY_IN_DELAY)    keyboard.press(key)    time.sleep(KEY_IN_DELAY)    keyboard.release(key)    time.sleep(KEY_IN_DELAY)def key_write(key, string: str) -> None:    if len(string) > CHAR_LIMIT:        for substr in split_chars(string):            better_press(TEXT_CHAT_BUTTON)            keyboard.write(substr, delay=KEY_IN_DELAY)            better_press('enter')    else:        better_press(TEXT_CHAT_BUTTON)        keyboard.write(string, delay=KEY_IN_DELAY)        better_press('enter')    keyboard.release(key)keys = get_keys()if not keys:    print('No Keyboard Shortcuts Detected. Add some in 'keys.json' in this folder.\n\nExample: {'ctrl+1':'GG!'}')    input()    exit()load_keys(keys)keyboard.wait()"
}